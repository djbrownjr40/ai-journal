{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { gsap } from 'gsap';\nimport inkDroplet1 from '@/assets/inkDroplet1.svg';\nimport inkDroplet2 from '@/assets/inkDroplet2.svg';\nimport inkDroplet3 from '@/assets/inkDroplet3.svg';\nimport inkDroplet4 from '@/assets/inkDroplet4.svg';\nimport inkDroplet5 from '@/assets/inkDroplet5.svg';\nimport inkDroplet6 from '@/assets/inkDroplet6.svg';\n//   import { text } from 'express';\n\nexport default {\n  name: 'LandingPage',\n  data() {\n    return {\n      droplets: Array(100).fill(0),\n      // Create an array with 100 entries\n      inkDroplets: [inkDroplet1, inkDroplet2, inkDroplet3, inkDroplet4, inkDroplet5, inkDroplet6],\n      showText: false,\n      displayedText: '',\n      isTyping: false,\n      typingInProgress: false,\n      showNewLine: false,\n      newLineText: 'ジャーナル'\n    };\n  },\n  methods: {\n    animateText() {\n      if (this.typingInProgress) return;\n      this.typingInProgress = true;\n      const typingText = 'ai';\n      this.isTyping = true;\n      let index = 0;\n      const interval = setInterval(() => {\n        this.displayedText += typingText[index];\n        index++;\n        if (index === typingText.length) {\n          clearInterval(interval);\n          // this.isTyping = false;\n          this.typingInProgress = false;\n          this.showNewLine = true;\n          this.animateNewLine();\n        }\n      }, 1000);\n    },\n    animateNewLine() {\n      const textElementTop = document.querySelector('.glitch-text-top');\n      const textElementBottom = document.querySelector('.glitch-text-bottom');\n      if (textElementTop && textElementBottom) {\n        const originalText = this.newLineText;\n\n        // Set initial colors\n        let topColor = '#ff00ff';\n        let bottomColor = '#00ffff';\n        textElementTop.style.color = topColor;\n        textElementBottom.style.color = bottomColor;\n\n        // Function to switch colors\n        const switchColors = () => {\n          [topColor, bottomColor] = [bottomColor, topColor]; // Swap colors\n          textElementTop.style.color = topColor;\n          textElementBottom.style.color = bottomColor;\n        };\n\n        // Change color every 3 to 5 seconds\n        setInterval(switchColors, Math.random() * 2000 + 3000); // Between 3000ms (3s) and 5000ms (5s)\n\n        setInterval(() => {\n          const randomChar = String.fromCharCode(Math.random() * 126); // Generate a random character\n          const glitchTextTop = originalText.split('').map(char => {\n            return Math.random() < 0.2 ? randomChar : char; // 20% chance to replace a character\n          }).join('');\n          const glitchTextBottom = originalText.split('').map(char => {\n            return Math.random() < 0.2 ? randomChar : char; // Similar glitch for bottom text\n          }).join('');\n          textElementTop.textContent = glitchTextTop; // Update top text\n          textElementBottom.textContent = glitchTextBottom; // Update bottom text\n        }, 100); // Update text every 100ms\n      } else {\n        console.error('Glitch text elements not found!');\n      }\n    },\n    startJournaling() {\n      this.$router.push('/journaling');\n    },\n    getRandomDroplet() {\n      return this.inkDroplets[Math.floor(Math.random() * this.inkDroplets.length)];\n    },\n    getDropletStyle() {\n      const size = Math.random() * (100 - 20) + 20; // Random size within range\n      const left = Math.random() * 100; // Random left position (0% - 100%)\n      const top = Math.random() * 100; // Random top position (0% - 100%)\n      return {\n        width: `${size}px`,\n        height: `${size}px`,\n        left: `${left}%`,\n        top: `${top}%`,\n        position: 'absolute' // Ensure droplets are positioned absolutely\n      };\n    },\n    animateDroplets() {\n      const droplets = this.$refs.hero.children;\n      Array.from(droplets).forEach((droplet, index) => {\n        const duration = 1.2 - index / droplets.length * 0.8; // Ramp up speed\n        gsap.fromTo(droplet, {\n          scale: 0.8,\n          opacity: 0,\n          y: -30\n        }, {\n          scale: 1,\n          opacity: 1,\n          y: 0,\n          duration: duration,\n          delay: index * 0.05,\n          // Adjusted delay for faster start\n          ease: 'power2.out'\n        });\n      });\n\n      // Start fading to black immediately\n      this.setBlackScreen();\n\n      // Show text after all droplets are animated\n      setTimeout(() => {\n        this.showText = true; // Show text after droplet animation\n      }, 3400); // Adjust timing as needed\n    },\n    setBlackScreen() {\n      const overlay = this.$refs.overlay; // Use Vue ref for the overlay\n      if (overlay) {\n        overlay.style.opacity = '1'; // Start fading to black\n        overlay.style.pointerEvents = 'all'; // Make overlay clickable\n\n        // After the fade duration, show the text\n        setTimeout(() => {\n          this.revealText();\n          if (!this.typingInProgress) {\n            this.animateText();\n          }\n        }, 3600); // Match this to the overlay transition duration\n      } else {\n        console.error('Overlay element not found!');\n      }\n    },\n    revealText() {\n      this.showText = true; // Reveal the text on top of the black screen\n      this.$nextTick(() => {\n        const text = document.querySelector('.reveal-text');\n        if (text) {\n          text.style.opacity = '1'; // Make text visible\n        }\n      });\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.animateDroplets();\n    });\n  }\n};","map":{"version":3,"names":["gsap","inkDroplet1","inkDroplet2","inkDroplet3","inkDroplet4","inkDroplet5","inkDroplet6","name","data","droplets","Array","fill","inkDroplets","showText","displayedText","isTyping","typingInProgress","showNewLine","newLineText","methods","animateText","typingText","index","interval","setInterval","length","clearInterval","animateNewLine","textElementTop","document","querySelector","textElementBottom","originalText","topColor","bottomColor","style","color","switchColors","Math","random","randomChar","String","fromCharCode","glitchTextTop","split","map","char","join","glitchTextBottom","textContent","console","error","startJournaling","$router","push","getRandomDroplet","floor","getDropletStyle","size","left","top","width","height","position","animateDroplets","$refs","hero","children","from","forEach","droplet","duration","fromTo","scale","opacity","y","delay","ease","setBlackScreen","setTimeout","overlay","pointerEvents","revealText","$nextTick","text","mounted"],"sources":["C:\\Users\\d.Brown\\Desktop\\d.brown\\portfolio\\src\\components\\LandingPage.vue"],"sourcesContent":["<template>\r\n    <section class=\"landing-page\">\r\n<div>\r\n    <h1 v-if=\"showText\" class=\"reveal-text\">\r\n        {{ displayedText }}\r\n        <span class=\"cursor\" v-if=\"isTyping\"></span>\r\n    </h1>\r\n        <h2 v-if=\"showNewLine\" class=\"glitch-text\">\r\n        <span class=\"glitch-text-top\">{{ newLineText }}</span>\r\n        <span class=\"glitch-text-bottom\">{{ newLineText }}</span>\r\n        <h2 class=\"hero glitch layers\">{{ newLineText }}</h2>\r\n\r\n    </h2>\r\n</div>\r\n      <div class=\"hero\" ref=\"hero\">\r\n          <img\r\n          v-for=\"(droplet, index) in droplets\"\r\n          :key=\"index\"\r\n          class=\"ink-droplet\"\r\n          :src=\"getRandomDroplet()\"\r\n          :style=\"getDropletStyle()\"\r\n          />\r\n        </div>\r\n        <button v-if=\"!showText\" @click=\"startJournaling\">Start Your Journaling Journey</button>\r\n      <div class=\"overlay\" ref=\"overlay\"></div> <!-- Overlay for fading to black -->\r\n    </section>\r\n  </template>\r\n  \r\n  <script>\r\n  import { gsap } from 'gsap';\r\n  import inkDroplet1 from '@/assets/inkDroplet1.svg';\r\n  import inkDroplet2 from '@/assets/inkDroplet2.svg';\r\n  import inkDroplet3 from '@/assets/inkDroplet3.svg';\r\n  import inkDroplet4 from '@/assets/inkDroplet4.svg';\r\n  import inkDroplet5 from '@/assets/inkDroplet5.svg';\r\n  import inkDroplet6 from '@/assets/inkDroplet6.svg';\r\n//   import { text } from 'express';\r\n  \r\n  export default {\r\n    name: 'LandingPage',\r\n    data() {\r\n      return {\r\n        droplets: Array(100).fill(0), // Create an array with 100 entries\r\n        inkDroplets: [\r\n          inkDroplet1,\r\n          inkDroplet2,\r\n          inkDroplet3,\r\n          inkDroplet4,\r\n          inkDroplet5,\r\n          inkDroplet6,\r\n        ],\r\n        showText: false,\r\n        displayedText: '',\r\n        isTyping: false,\r\n        typingInProgress: false,\r\n        showNewLine: false,\r\n        newLineText: 'ジャーナル',\r\n      };\r\n    },\r\n    methods: {\r\n        animateText(){\r\n            if (this.typingInProgress) return;\r\n\r\n            this.typingInProgress = true;\r\n            const typingText = 'ai';\r\n            this.isTyping = true;\r\n\r\n            let index = 0;\r\n            const interval = setInterval(() => {\r\n                this.displayedText += typingText[index];\r\n                index++;\r\n                if (index === typingText.length) {\r\n                    clearInterval(interval);\r\n                    // this.isTyping = false;\r\n                    this.typingInProgress = false;\r\n                    this.showNewLine = true;\r\n                    this.animateNewLine();\r\n                }\r\n            }, 1000);\r\n        },\r\n        animateNewLine() {\r\n    const textElementTop = document.querySelector('.glitch-text-top');\r\n    const textElementBottom = document.querySelector('.glitch-text-bottom');\r\n\r\n    if (textElementTop && textElementBottom) {\r\n        const originalText = this.newLineText;\r\n\r\n        // Set initial colors\r\n        let topColor = '#ff00ff';\r\n        let bottomColor = '#00ffff';\r\n        textElementTop.style.color = topColor;\r\n        textElementBottom.style.color = bottomColor;\r\n\r\n        // Function to switch colors\r\n        const switchColors = () => {\r\n            [topColor, bottomColor] = [bottomColor, topColor]; // Swap colors\r\n            textElementTop.style.color = topColor;\r\n            textElementBottom.style.color = bottomColor;\r\n        };\r\n\r\n        // Change color every 3 to 5 seconds\r\n        setInterval(switchColors, Math.random() * 2000 + 3000); // Between 3000ms (3s) and 5000ms (5s)\r\n\r\n        setInterval(() => {\r\n            const randomChar = String.fromCharCode(Math.random() * 126); // Generate a random character\r\n            const glitchTextTop = originalText.split('').map((char) => {\r\n                return Math.random() < 0.2 ? randomChar : char; // 20% chance to replace a character\r\n            }).join('');\r\n\r\n            const glitchTextBottom = originalText.split('').map((char) => {\r\n                return Math.random() < 0.2 ? randomChar : char; // Similar glitch for bottom text\r\n            }).join('');\r\n\r\n            textElementTop.textContent = glitchTextTop; // Update top text\r\n            textElementBottom.textContent = glitchTextBottom; // Update bottom text\r\n        }, 100); // Update text every 100ms\r\n    } else {\r\n        console.error('Glitch text elements not found!');\r\n    }\r\n},\r\n      startJournaling() {\r\n        this.$router.push('/journaling');\r\n      },\r\n      getRandomDroplet() {\r\n        return this.inkDroplets[Math.floor(Math.random() * this.inkDroplets.length)];\r\n      },\r\n      getDropletStyle() {\r\n        const size = Math.random() * (100 - 20) + 20; // Random size within range\r\n        const left = Math.random() * 100; // Random left position (0% - 100%)\r\n        const top = Math.random() * 100; // Random top position (0% - 100%)\r\n        return {\r\n          width: `${size}px`,\r\n          height: `${size}px`,\r\n          left: `${left}%`,\r\n          top: `${top}%`,\r\n          position: 'absolute', // Ensure droplets are positioned absolutely\r\n        };\r\n      },\r\n      animateDroplets() {\r\n        const droplets = this.$refs.hero.children;\r\n        Array.from(droplets).forEach((droplet, index) => {\r\n          const duration = 1.2 - (index / droplets.length) * 0.8; // Ramp up speed\r\n          gsap.fromTo(droplet, {\r\n            scale: 0.8,\r\n            opacity: 0,\r\n            y: -30,\r\n          }, {\r\n            scale: 1,\r\n            opacity: 1,\r\n            y: 0,\r\n            duration: duration,\r\n            delay: index * 0.05, // Adjusted delay for faster start\r\n            ease: 'power2.out',\r\n          });\r\n        });\r\n  \r\n        // Start fading to black immediately\r\n        this.setBlackScreen();\r\n  \r\n        // Show text after all droplets are animated\r\n        setTimeout(() => {\r\n          this.showText = true; // Show text after droplet animation\r\n        }, 3400); // Adjust timing as needed\r\n      },\r\n      setBlackScreen() {\r\n        const overlay = this.$refs.overlay; // Use Vue ref for the overlay\r\n        if (overlay) {\r\n          overlay.style.opacity = '1'; // Start fading to black\r\n          overlay.style.pointerEvents = 'all'; // Make overlay clickable\r\n  \r\n          // After the fade duration, show the text\r\n          setTimeout(() => {\r\n            this.revealText();\r\n            if (!this.typingInProgress) { \r\n                this.animateText();\r\n            }\r\n          }, 3600); // Match this to the overlay transition duration\r\n        } else {\r\n          console.error('Overlay element not found!');\r\n        }\r\n      },\r\n      revealText() {\r\n        this.showText = true; // Reveal the text on top of the black screen\r\n        this.$nextTick(() => {\r\n          const text = document.querySelector('.reveal-text');\r\n          if (text) {\r\n            text.style.opacity = '1'; // Make text visible\r\n          }\r\n        });\r\n      }\r\n    },\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.animateDroplets();\r\n      });\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n.glitch {\r\n    animation: glitch 1s forwards;\r\n}\r\n\r\n.reveal-text {\r\n    color: white; /* Text color */\r\n    font-size: 48px; /* Adjust as needed */\r\n    position: absolute; /* Positioning for the text */\r\n    top: 0%; /* Center vertically */\r\n    left: 50%; /* Center horizontally */\r\n    transform: translate(-50%, -50%); /* Centering adjustment */\r\n    opacity: 0; /* Start invisible */\r\n    transition: opacity 1s ease; /* Smooth transition for text appearance */\r\n    z-index: 2; /* Higher z-index */\r\n}\r\n\r\n.glitch-text {\r\n    position: relative;\r\n    display: inline-block; /* Allows positioning of child elements */\r\n    bottom: 20%; /* Adjust this value to position it correctly below the \"ai\" text */\r\n    left: 50%; /* Center horizontally */\r\n    transform: translate(-50%, -50%); /* Centering adjustment */\r\n    z-index: 2; /* Ensure it's above the overlay */\r\n}\r\n\r\n.glitch-text-top {\r\n    position: absolute;\r\n    left: 0;\r\n    top: -10px; /* Adjust this for the superscript effect */\r\n    color: #ff00ff; /* Initial color */\r\n    transition: color 0.5s ease; /* Smooth color transition */\r\n    z-index: 1; /* Make sure it's above the bottom text */\r\n}\r\n\r\n.glitch-text-bottom {\r\n    color: #00ffff; /* Shadow color */\r\n    opacity: 0.5; /* Slight transparency for shadow effect */\r\n    transition: color 0.5s ease; /* Smooth color transition */\r\n}\r\n\r\n@keyframes glitch {\r\n    0% {\r\n        opacity: 1;\r\n        transform: translate(0);\r\n    }\r\n    10% {\r\n        opacity: 1;\r\n        transform: translate(-2px, -2px);\r\n    }\r\n    20% {\r\n        opacity: 0.8;\r\n        transform: translate(2px, 0);\r\n    }\r\n    30% {\r\n        opacity: 0.5;\r\n        transform: translate(-1px, 1px);\r\n    }\r\n    40% {\r\n        opacity: 1;\r\n        transform: translate(1px, -1px);\r\n    }\r\n    50% {\r\n        opacity: 1;\r\n        transform: translate(0);\r\n    }\r\n    60% {\r\n        opacity: 0.5;\r\n        transform: translate(0, 2px);\r\n    }\r\n    70% {\r\n        opacity: 1;\r\n        transform: translate(-2px, 0);\r\n    }\r\n    80% {\r\n        opacity: 0.8;\r\n        transform: translate(2px, 1px);\r\n    }\r\n    100% {\r\n        opacity: 1;\r\n        transform: translate(0);\r\n    }\r\n}\r\n\r\n  .cursor {\r\n  display: inline-block;\r\n  width: 2px; /* Width of the cursor */\r\n  height: 34px; /* Height of the cursor */\r\n  background-color: white; /* Cursor color */\r\n  animation: blink 0.7s step-end infinite; /* Blinking effect */\r\n}\r\n\r\n@keyframes blink {\r\n  0%, 100% {\r\n    opacity: 1; /* Visible */\r\n  }\r\n  50% {\r\n    opacity: 0; /* Invisible */\r\n  }\r\n}\r\n\r\n  .landing-page {\r\n    text-align: center;\r\n    padding: 50px;\r\n    background: url('@/assets/parchment.jpg') no-repeat center center;\r\n    background-size: cover;\r\n    background-attachment: fixed; /* Keep background fixed */\r\n    height: 100vh; /* Full viewport height */\r\n    position: relative;\r\n    overflow: hidden; /* Prevent scrollbars */\r\n  }\r\n  \r\n  .hero {\r\n    position: relative;\r\n    height: 100%;\r\n  }\r\n  \r\n  .ink-droplet {\r\n    opacity: 0; /* Start invisible */\r\n  }\r\n  \r\n\r\n  \r\n  .overlay {\r\n  position: fixed; /* Fixed to cover the viewport */\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: black; /* Solid black */\r\n  opacity: 0; /* Start invisible */\r\n  transition: opacity 8s ease; /* Smooth transition to black (8 seconds) */\r\n  pointer-events: none; /* Allow clicks to pass through */\r\n  z-index: 1; /* Lower z-index */\r\n}\r\n\r\n///////\r\n\r\nh1,\r\nh2 {\r\n  margin: 0;\r\n}\r\n\r\na {\r\n  color: #ccc;\r\n}\r\n\r\nsection {\r\n  padding: 20px;\r\n}\r\n\r\n.hero {\r\n  font-size: clamp(40px, 10vw, 100px);\r\n  line-height: 1;\r\n  display: inline-block;\r\n  color: #fff;\r\n  z-index: 2;\r\n  letter-spacing: 10px;\r\n\r\n  /* Bright things in dark environments usually cast that light, giving off a glow */\r\n  filter: drop-shadow(0 1px 3px);\r\n}\r\n\r\n.demo {\r\n  height: 100px;\r\n  background: #fff;\r\n}\r\n\r\n.layers {\r\n  position: relative;\r\n}\r\n\r\n.layers::before,\r\n.layers::after {\r\n  content: attr(data-text);\r\n  position: absolute;\r\n  width: 110%;\r\n  z-index: -1;\r\n}\r\n\r\n.layers::before {\r\n  top: 10px;\r\n  left: 15px;\r\n  color: #e0287d;\r\n}\r\n\r\n.layers::after {\r\n  top: 5px;\r\n  left: -10px;\r\n  color: #1bc7fb;\r\n}\r\n\r\n.single-path {\r\n  clip-path: polygon(\r\n    0% 12%,\r\n    53% 12%,\r\n    53% 26%,\r\n    25% 26%,\r\n    25% 86%,\r\n    31% 86%,\r\n    31% 0%,\r\n    53% 0%,\r\n    53% 84%,\r\n    92% 84%,\r\n    92% 82%,\r\n    70% 82%,\r\n    70% 29%,\r\n    78% 29%,\r\n    78% 65%,\r\n    69% 65%,\r\n    69% 66%,\r\n    77% 66%,\r\n    77% 45%,\r\n    85% 45%,\r\n    85% 26%,\r\n    97% 26%,\r\n    97% 28%,\r\n    84% 28%,\r\n    84% 34%,\r\n    54% 34%,\r\n    54% 89%,\r\n    30% 89%,\r\n    30% 58%,\r\n    83% 58%,\r\n    83% 5%,\r\n    68% 5%,\r\n    68% 36%,\r\n    62% 36%,\r\n    62% 1%,\r\n    12% 1%,\r\n    12% 34%,\r\n    60% 34%,\r\n    60% 57%,\r\n    98% 57%,\r\n    98% 83%,\r\n    1% 83%,\r\n    1% 53%,\r\n    91% 53%,\r\n    91% 84%,\r\n    8% 84%,\r\n    8% 83%,\r\n    4% 83%\r\n  );\r\n}\r\n\r\n.paths {\r\n  animation: paths 5s step-end infinite;\r\n}\r\n\r\n@keyframes paths {\r\n  0% {\r\n    clip-path: polygon(\r\n      0% 43%,\r\n      83% 43%,\r\n      83% 22%,\r\n      23% 22%,\r\n      23% 24%,\r\n      91% 24%,\r\n      91% 26%,\r\n      18% 26%,\r\n      18% 83%,\r\n      29% 83%,\r\n      29% 17%,\r\n      41% 17%,\r\n      41% 39%,\r\n      18% 39%,\r\n      18% 82%,\r\n      54% 82%,\r\n      54% 88%,\r\n      19% 88%,\r\n      19% 4%,\r\n      39% 4%,\r\n      39% 14%,\r\n      76% 14%,\r\n      76% 52%,\r\n      23% 52%,\r\n      23% 35%,\r\n      19% 35%,\r\n      19% 8%,\r\n      36% 8%,\r\n      36% 31%,\r\n      73% 31%,\r\n      73% 16%,\r\n      1% 16%,\r\n      1% 56%,\r\n      50% 56%,\r\n      50% 8%\r\n    );\r\n  }\r\n\r\n  5% {\r\n    clip-path: polygon(\r\n      0% 29%,\r\n      44% 29%,\r\n      44% 83%,\r\n      94% 83%,\r\n      94% 56%,\r\n      11% 56%,\r\n      11% 64%,\r\n      94% 64%,\r\n      94% 70%,\r\n      88% 70%,\r\n      88% 32%,\r\n      18% 32%,\r\n      18% 96%,\r\n      10% 96%,\r\n      10% 62%,\r\n      9% 62%,\r\n      9% 84%,\r\n      68% 84%,\r\n      68% 50%,\r\n      52% 50%,\r\n      52% 55%,\r\n      35% 55%,\r\n      35% 87%,\r\n      25% 87%,\r\n      25% 39%,\r\n      15% 39%,\r\n      15% 88%,\r\n      52% 88%\r\n    );\r\n  }\r\n\r\n  30% {\r\n    clip-path: polygon(\r\n      0% 53%,\r\n      93% 53%,\r\n      93% 62%,\r\n      68% 62%,\r\n      68% 37%,\r\n      97% 37%,\r\n      97% 89%,\r\n      13% 89%,\r\n      13% 45%,\r\n      51% 45%,\r\n      51% 88%,\r\n      17% 88%,\r\n      17% 54%,\r\n      81% 54%,\r\n      81% 75%,\r\n      79% 75%,\r\n      79% 76%,\r\n      38% 76%,\r\n      38% 28%,\r\n      61% 28%,\r\n      61% 12%,\r\n      55% 12%,\r\n      55% 62%,\r\n      68% 62%,\r\n      68% 51%,\r\n      0% 51%,\r\n      0% 92%,\r\n      63% 92%,\r\n      63% 4%,\r\n      65% 4%\r\n    );\r\n  }\r\n\r\n  45% {\r\n    clip-path: polygon(\r\n      0% 33%,\r\n      2% 33%,\r\n      2% 69%,\r\n      58% 69%,\r\n      58% 94%,\r\n      55% 94%,\r\n      55% 25%,\r\n      33% 25%,\r\n      33% 85%,\r\n      16% 85%,\r\n      16% 19%,\r\n      5% 19%,\r\n      5% 20%,\r\n      79% 20%,\r\n      79% 96%,\r\n      93% 96%,\r\n      93% 50%,\r\n      5% 50%,\r\n      5% 74%,\r\n      55% 74%,\r\n      55% 57%,\r\n      96% 57%,\r\n      96% 59%,\r\n      87% 59%,\r\n      87% 65%,\r\n      82% 65%,\r\n      82% 39%,\r\n      63% 39%,\r\n      63% 92%,\r\n      4% 92%,\r\n      4% 36%,\r\n      24% 36%,\r\n      24% 70%,\r\n      1% 70%,\r\n      1% 43%,\r\n      15% 43%,\r\n      15% 28%,\r\n      23% 28%,\r\n      23% 71%,\r\n      90% 71%,\r\n      90% 86%,\r\n      97% 86%,\r\n      97% 1%,\r\n      60% 1%,\r\n      60% 67%,\r\n      71% 67%,\r\n      71% 91%,\r\n      17% 91%,\r\n      17% 14%,\r\n      39% 14%,\r\n      39% 30%,\r\n      58% 30%,\r\n      58% 11%,\r\n      52% 11%,\r\n      52% 83%,\r\n      68% 83%\r\n    );\r\n  }\r\n\r\n  76% {\r\n    clip-path: polygon(\r\n      0% 26%,\r\n      15% 26%,\r\n      15% 73%,\r\n      72% 73%,\r\n      72% 70%,\r\n      77% 70%,\r\n      77% 75%,\r\n      8% 75%,\r\n      8% 42%,\r\n      4% 42%,\r\n      4% 61%,\r\n      17% 61%,\r\n      17% 12%,\r\n      26% 12%,\r\n      26% 63%,\r\n      73% 63%,\r\n      73% 43%,\r\n      90% 43%,\r\n      90% 67%,\r\n      50% 67%,\r\n      50% 41%,\r\n      42% 41%,\r\n      42% 46%,\r\n      50% 46%,\r\n      50% 84%,\r\n      96% 84%,\r\n      96% 78%,\r\n      49% 78%,\r\n      49% 25%,\r\n      63% 25%,\r\n      63% 14%\r\n    );\r\n  }\r\n\r\n  90% {\r\n    clip-path: polygon(\r\n      0% 41%,\r\n      13% 41%,\r\n      13% 6%,\r\n      87% 6%,\r\n      87% 93%,\r\n      10% 93%,\r\n      10% 13%,\r\n      89% 13%,\r\n      89% 6%,\r\n      3% 6%,\r\n      3% 8%,\r\n      16% 8%,\r\n      16% 79%,\r\n      0% 79%,\r\n      0% 99%,\r\n      92% 99%,\r\n      92% 90%,\r\n      5% 90%,\r\n      5% 60%,\r\n      0% 60%,\r\n      0% 48%,\r\n      89% 48%,\r\n      89% 13%,\r\n      80% 13%,\r\n      80% 43%,\r\n      95% 43%,\r\n      95% 19%,\r\n      80% 19%,\r\n      80% 85%,\r\n      38% 85%,\r\n      38% 62%\r\n    );\r\n  }\r\n\r\n  1%,\r\n  7%,\r\n  33%,\r\n  47%,\r\n  78%,\r\n  93% {\r\n    clip-path: none;\r\n  }\r\n}\r\n\r\n.movement {\r\n  /* Normally this position would be absolute & on the layers, set to relative here so we can see it on the div */\r\n  position: relative;\r\n  animation: movement 8s step-end infinite;\r\n}\r\n\r\n@keyframes movement {\r\n  0% {\r\n    top: 0px;\r\n    left: -20px;\r\n  }\r\n\r\n  15% {\r\n    top: 10px;\r\n    left: 10px;\r\n  }\r\n\r\n  60% {\r\n    top: 5px;\r\n    left: -10px;\r\n  }\r\n\r\n  75% {\r\n    top: -5px;\r\n    left: 20px;\r\n  }\r\n\r\n  100% {\r\n    top: 10px;\r\n    left: 5px;\r\n  }\r\n}\r\n\r\n.opacity {\r\n  animation: opacity 5s step-end infinite;\r\n}\r\n\r\n@keyframes opacity {\r\n  0% {\r\n    opacity: 0.1;\r\n  }\r\n\r\n  5% {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  30% {\r\n    opacity: 0.4;\r\n  }\r\n\r\n  45% {\r\n    opacity: 0.6;\r\n  }\r\n\r\n  76% {\r\n    opacity: 0.4;\r\n  }\r\n\r\n  90% {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  1%,\r\n  7%,\r\n  33%,\r\n  47%,\r\n  78%,\r\n  93% {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.font {\r\n  animation: font 7s step-end infinite;\r\n}\r\n\r\n@keyframes font {\r\n  0% {\r\n    font-weight: 100;\r\n    color: #e0287d;\r\n    filter: blur(3px);\r\n  }\r\n\r\n  20% {\r\n    font-weight: 500;\r\n    color: #fff;\r\n    filter: blur(0);\r\n  }\r\n\r\n  50% {\r\n    font-weight: 300;\r\n    color: #1bc7fb;\r\n    filter: blur(2px);\r\n  }\r\n\r\n  60% {\r\n    font-weight: 700;\r\n    color: #fff;\r\n    filter: blur(0);\r\n  }\r\n\r\n  90% {\r\n    font-weight: 500;\r\n    color: #e0287d;\r\n    filter: blur(6px);\r\n  }\r\n}\r\n\r\n.glitch span {\r\n  animation: paths 5s step-end infinite;\r\n}\r\n\r\n.glitch::before {\r\n  animation: paths 5s step-end infinite, opacity 5s step-end infinite,\r\n    font 8s step-end infinite, movement 10s step-end infinite;\r\n}\r\n\r\n.glitch::after {\r\n  animation: paths 5s step-end infinite, opacity 5s step-end infinite,\r\n    font 7s step-end infinite, movement 8s step-end infinite;\r\n}\r\n\r\n.hero-container {\r\n  position: relative;\r\n  padding: 200px 0;\r\n  text-align: center;\r\n}\r\n\r\n.environment {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  opacity: 0.5;\r\n  filter: blur(5px);\r\n  background: url(https://images.unsplash.com/photo-1602136773736-34d445b989cb?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80)\r\n    center no-repeat;\r\n  background-size: cover;\r\n}\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}